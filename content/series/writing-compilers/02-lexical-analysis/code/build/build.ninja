# CMAKE generated file: DO NOT EDIT!
# Generated by "Ninja" Generator, CMake Version 3.28

# This file contains all the build statements describing the
# compilation DAG.

# =============================================================================
# Write statements declared in CMakeLists.txt:
# 
# Which is the root file.
# =============================================================================

# =============================================================================
# Project: Project
# Configurations: Debug
# =============================================================================

#############################################
# Minimal version of Ninja required by this file

ninja_required_version = 1.5


#############################################
# Set configuration variable for custom commands.

CONFIGURATION = Debug
# =============================================================================
# Include auxiliary files.


#############################################
# Include rules file.

include CMakeFiles/rules.ninja

# =============================================================================

#############################################
# Logical path to working directory; prefix for absolute paths.

cmake_ninja_workdir = /root/projects/rhanqtl.github.io/content/series/writing-compilers/02-lexical-analysis/code/build/
# =============================================================================
# Object build statements for STATIC_LIBRARY target lexer


#############################################
# Order-only phony target for lexer

build cmake_object_order_depends_target_lexer: phony || CMakeFiles/lexer.dir

build CMakeFiles/lexer.dir/src/Lexer.cpp.o: CXX_COMPILER__lexer_unscanned_Debug /root/projects/rhanqtl.github.io/content/series/writing-compilers/02-lexical-analysis/code/src/Lexer.cpp || cmake_object_order_depends_target_lexer
  DEP_FILE = CMakeFiles/lexer.dir/src/Lexer.cpp.o.d
  FLAGS = -g
  INCLUDES = -I/root/projects/rhanqtl.github.io/content/series/writing-compilers/02-lexical-analysis/code/include
  OBJECT_DIR = CMakeFiles/lexer.dir
  OBJECT_FILE_DIR = CMakeFiles/lexer.dir/src

build CMakeFiles/lexer.dir/src/Token.cpp.o: CXX_COMPILER__lexer_unscanned_Debug /root/projects/rhanqtl.github.io/content/series/writing-compilers/02-lexical-analysis/code/src/Token.cpp || cmake_object_order_depends_target_lexer
  DEP_FILE = CMakeFiles/lexer.dir/src/Token.cpp.o.d
  FLAGS = -g
  INCLUDES = -I/root/projects/rhanqtl.github.io/content/series/writing-compilers/02-lexical-analysis/code/include
  OBJECT_DIR = CMakeFiles/lexer.dir
  OBJECT_FILE_DIR = CMakeFiles/lexer.dir/src


# =============================================================================
# Link build statements for STATIC_LIBRARY target lexer


#############################################
# Link the static library liblexer.a

build liblexer.a: CXX_STATIC_LIBRARY_LINKER__lexer_Debug CMakeFiles/lexer.dir/src/Lexer.cpp.o CMakeFiles/lexer.dir/src/Token.cpp.o
  LANGUAGE_COMPILE_FLAGS = -g
  OBJECT_DIR = CMakeFiles/lexer.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = liblexer.a
  TARGET_PDB = lexer.a.dbg


#############################################
# Utility command for edit_cache

build CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /root/projects/rhanqtl.github.io/content/series/writing-compilers/02-lexical-analysis/code/build && /usr/bin/ccmake -S/root/projects/rhanqtl.github.io/content/series/writing-compilers/02-lexical-analysis/code -B/root/projects/rhanqtl.github.io/content/series/writing-compilers/02-lexical-analysis/code/build
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build edit_cache: phony CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /root/projects/rhanqtl.github.io/content/series/writing-compilers/02-lexical-analysis/code/build && /usr/bin/cmake --regenerate-during-build -S/root/projects/rhanqtl.github.io/content/series/writing-compilers/02-lexical-analysis/code -B/root/projects/rhanqtl.github.io/content/series/writing-compilers/02-lexical-analysis/code/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build rebuild_cache: phony CMakeFiles/rebuild_cache.util

# =============================================================================
# Target aliases.

build lexer: phony liblexer.a

# =============================================================================
# Folder targets.

# =============================================================================

#############################################
# Folder: /root/projects/rhanqtl.github.io/content/series/writing-compilers/02-lexical-analysis/code/build

build all: phony liblexer.a

# =============================================================================
# Built-in targets


#############################################
# Re-run CMake if any of its inputs changed.

build build.ninja: RERUN_CMAKE | /root/projects/rhanqtl.github.io/content/series/writing-compilers/02-lexical-analysis/code/CMakeLists.txt /usr/share/cmake/Modules/CMakeCInformation.cmake /usr/share/cmake/Modules/CMakeCXXInformation.cmake /usr/share/cmake/Modules/CMakeCommonLanguageInclude.cmake /usr/share/cmake/Modules/CMakeGenericSystem.cmake /usr/share/cmake/Modules/CMakeInitializeConfigs.cmake /usr/share/cmake/Modules/CMakeLanguageInformation.cmake /usr/share/cmake/Modules/CMakeSystemSpecificInformation.cmake /usr/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake /usr/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake /usr/share/cmake/Modules/Compiler/Clang-C.cmake /usr/share/cmake/Modules/Compiler/Clang-CXX.cmake /usr/share/cmake/Modules/Compiler/Clang.cmake /usr/share/cmake/Modules/Compiler/GNU.cmake /usr/share/cmake/Modules/Platform/Linux-Clang-C.cmake /usr/share/cmake/Modules/Platform/Linux-Clang-CXX.cmake /usr/share/cmake/Modules/Platform/Linux-GNU-C.cmake /usr/share/cmake/Modules/Platform/Linux-GNU-CXX.cmake /usr/share/cmake/Modules/Platform/Linux-GNU.cmake /usr/share/cmake/Modules/Platform/Linux-Initialize.cmake /usr/share/cmake/Modules/Platform/Linux.cmake /usr/share/cmake/Modules/Platform/UnixPaths.cmake CMakeCache.txt CMakeFiles/3.28.3/CMakeCCompiler.cmake CMakeFiles/3.28.3/CMakeCXXCompiler.cmake CMakeFiles/3.28.3/CMakeSystem.cmake
  pool = console


#############################################
# A missing CMake input file is not an error.

build /root/projects/rhanqtl.github.io/content/series/writing-compilers/02-lexical-analysis/code/CMakeLists.txt /usr/share/cmake/Modules/CMakeCInformation.cmake /usr/share/cmake/Modules/CMakeCXXInformation.cmake /usr/share/cmake/Modules/CMakeCommonLanguageInclude.cmake /usr/share/cmake/Modules/CMakeGenericSystem.cmake /usr/share/cmake/Modules/CMakeInitializeConfigs.cmake /usr/share/cmake/Modules/CMakeLanguageInformation.cmake /usr/share/cmake/Modules/CMakeSystemSpecificInformation.cmake /usr/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake /usr/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake /usr/share/cmake/Modules/Compiler/Clang-C.cmake /usr/share/cmake/Modules/Compiler/Clang-CXX.cmake /usr/share/cmake/Modules/Compiler/Clang.cmake /usr/share/cmake/Modules/Compiler/GNU.cmake /usr/share/cmake/Modules/Platform/Linux-Clang-C.cmake /usr/share/cmake/Modules/Platform/Linux-Clang-CXX.cmake /usr/share/cmake/Modules/Platform/Linux-GNU-C.cmake /usr/share/cmake/Modules/Platform/Linux-GNU-CXX.cmake /usr/share/cmake/Modules/Platform/Linux-GNU.cmake /usr/share/cmake/Modules/Platform/Linux-Initialize.cmake /usr/share/cmake/Modules/Platform/Linux.cmake /usr/share/cmake/Modules/Platform/UnixPaths.cmake CMakeCache.txt CMakeFiles/3.28.3/CMakeCCompiler.cmake CMakeFiles/3.28.3/CMakeCXXCompiler.cmake CMakeFiles/3.28.3/CMakeSystem.cmake: phony


#############################################
# Clean all the built files.

build clean: CLEAN


#############################################
# Print all primary targets available.

build help: HELP


#############################################
# Make the all target the default.

default all
